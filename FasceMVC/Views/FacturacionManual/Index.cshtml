@model FasceMVC.Models.FacturacionManual


<style type="text/css">
    .imputtrasnparente {
        background-color: transparent !important;
        border: 0;
    }
</style>

<div class="container">

    <form id="formAgregarDetalle" method="post" autocomplete="off">

        <div class="row">
            <div class="col-6 container ">
                <div>
                    <!-- Search Widget -->
                    <div class="card  ">
                        <h5 style="color:white " class="card-header  amarillo">
                            @if (ViewBag.TipoSoporte)
                            {<span>Crear Factura Contingencia</span> }
                            else
                            {<span>Crear Factura</span>} - @Model.Prefijo
                        </h5>
                        <div class="card-body">
                            <div class="row">
                                <div>
                                    <div class="row">
                                        <div class="col">
                                            <label>Fecha:</label>
                                            @Html.EditorFor(Model => Model.Fecha, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", Value = string.Format("{0:yyyy-MM-dd}", Model.Fecha) } })
                                        </div>
                                        <div class="col">
                                            <label>Fecha vencimiento:</label>
                                            @Html.EditorFor(Model => Model.FechaVencimiento, new { htmlAttributes = new { @class = "form-control ", min = DateTime.Now.ToString("yyyy-MM-dd"), Value = string.Format("{0:yyyy-MM-dd}", Model.FechaVencimiento), onchange = "CambioFechaVencimiento(this.value);" } })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            <label>Moneda</label>
                                            @Html.DropDownListFor(m => m.Moneda, Model.ListaMoneda, new { @class = "form-control", onchange = "CambiarMoneda(this.value)" })
                                        </div>
                                    </div>
                                    <div id="idDivTrm">
                                        <div class="row">
                                            <div class="col">
                                                <label>TRM</label>
                                                @Html.TextBoxFor(m => m.Trm, new { @class = "form-control", id = "idTrm", onchange = "CambiarTrm(this.value)" })
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col">
                                                <label>Fecha TRM:</label>
                                                @Html.EditorFor(Model => Model.FechaTrm, new { htmlAttributes = new { @class = "form-control", Value = string.Format("{0:yyyy-MM-dd}", Model.FechaTrm), onchange = "CambiarFechaTrm(this.value)" } })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            <label>Forma de pago</label>
                                            @Html.DropDownListFor(Model => Model.FormaPago, Model.ListaFormaPago, new { @class = "form-control", onchange = "CambiarFormaPago(this.value)" })
                                        </div>
                                    </div>
                                    @if (ViewBag.TipoSoporte)
                                    {
                                        <div class="row">
                                            <div class="col">
                                                <label>Tipo Contingencia</label>
                                                @Html.DropDownListFor(Model => Model.CodigoContingencia, Model.ListaContingencia, new { @class = "form-control", onchange = "Contingencia(this.value)" })
                                            </div>
                                        </div>
                                    }
                                    <div class="row">
                                        <div class="col">
                                            <label>Medio pago</label>
                                            @Html.DropDownListFor(Model => Model.MedioPago, Model.ListaMedioPago, new { @class = "form-control", onchange = "CambiarMedioPago(this.value)" })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-12 col-lg-4">
                                            <label>N° Orden compra</label>
                                            @Html.TextBoxFor(Model => Model.OrdenCompra, new { @class = "form-control", onchange = "AgregarODR(this.value, 1)" })
                                        </div>
                                        <div class="col-sm-12 col-lg-4">
                                            <label>N° Despacho</label>
                                            @Html.TextBoxFor(Model => Model.Despacho, new { @class = "form-control", onchange = "AgregarODR(this.value, 2)" })

                                        </div>
                                        <div class="col-sm-12 col-lg-4">
                                            <label>N° Recepción</label>
                                            @Html.TextBoxFor(Model => Model.Recepcion, new { @class = "form-control", onchange = "AgregarODR(this.value, 3)" })

                                        </div>
                                    </div>

                                    <hr />
                                    <table id="tableCatalogoFactura" class="table table-bordered table-striped table-sm table-responsive-sm table-responsive-md">
                                        <thead class="table-primary text-center">
                                            <tr>
                                                <th>Descripción</th>
                                                <th>Valor</th>
                                            </tr>
                                        </thead>

                                        @for (int i = 0; i < Model.ListadoCatalogo.Count(); i++)
                                        {
                                            <tr>
                                                <td class="" width="300">@Model.ListadoCatalogo[i].Descripcion.ToString()</td>
                                                @if (Model.ListadoCatalogo[i].Lista)
                                                {
                                                    <td class="catValor">
                                                        @Html.DropDownListFor(Model => Model.ListadoCatalogo[i].Valor, Model.ListadoCatalogo[i].ListadoCag, new { @class = "form-control", onchange = "GuardarCatalogoFactura('" + Model.ListadoCatalogo[i].Id + "',this.value);" })
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td class="catValor">
                                                        @Html.TextBoxFor(Model => Model.ListadoCatalogo[i].Valor, new { @class = "form-control text-right imputtrasnparente", onchange = "GuardarCatalogoFactura('" + Model.ListadoCatalogo[i].Id + "',this.value);" })
                                                    </td>
                                                }
                                            </tr>
                                        }

                                    </table>
                                </div>
                            </div>
                        </div>



                    </div>
                </div>
            </div>
            <div class="col-6">
                <div>
                    <!-- Search Widget -->
                    <div class="card  fondopciones">
                        <h5 style="color:white " class="card-header  rojo">Receptor </h5>
                        <div class="card-body">
                            <div class="form-group">
                                <label>Razón social:&nbsp;&nbsp;</label>
                                @Html.TextBox("RazonSocial", @Model.RazonSocial, new { @class = "form-control", disabled = "disabled" })
                            </div>

                            <div class="form-row">
                                <div class="col-8">
                                    <label>Identificación:&nbsp;&nbsp;</label>
                                    @Html.TextBox("Identificacion", @Model.Identificacion, new { @class = "form-control", disabled = "disabled" })

                                </div>
                                <div class="col">
                                    <label>Dígito:&nbsp;&nbsp;</label>
                                    @Html.TextBox("Digito", @Model.Digito, new { @class = "form-control", disabled = "disabled", Value = Model.Digito })
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Res.fiscal:&nbsp;&nbsp;</label>
                                @Html.TextBox("Responsabilidad fiscal", @Model.ResFiscal, new { @class = "form-control", disabled = "disabled", Value = Model.ResFiscal })
                            </div>

                            <div class="form-row">
                                <div class="col">
                                    <label>País:&nbsp;&nbsp;</label>
                                    @Html.TextBox("Pais", @Model.Pais, new { @class = "form-control", disabled = "disabled" })
                                </div>
                                <div class="col">
                                    <label>Ciudad:&nbsp;&nbsp;</label>
                                    @Html.TextBox("Ciudad", @Model.Ciudad, new { @class = "form-control", disabled = "disabled" })
                                </div>

                                <div class="col">
                                    <label>Departamento:&nbsp;&nbsp;</label>
                                    @Html.TextBox("Departamento", @Model.Departamento, new { @class = "form-control", disabled = "disabled" })
                                </div>

                            </div>
                            <div class="form-row">
                                <div class="col">
                                    <label>Télefono:&nbsp;&nbsp;</label>
                                    @Html.TextBox("Telefono", @Model.Telefono, new { @class = "form-control", disabled = "disabled" })
                                </div>
                                <div class="col">
                                    <label>Dirección:&nbsp;&nbsp;</label>
                                    @Html.TextBox("Direccion", @Model.Direccion, new { @class = "form-control", disabled = "disabled" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label>Correo:&nbsp;&nbsp;</label>
                                @Html.TextBox("Correo", @Model.Correo, new { @class = "form-control", disabled = "disabled" })
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>

    </form>

    <br />

    <div class="card">
        <div class="card-header azul">
            <div class="row">
                <div class="col-8">
                    <h5 style="color:white;">Detalles</h5>
                </div>
                <div class="col-4 justify-content-end" style="text-align-last: right">
                    <button class="btn btn-warning btn-sm" style="color:black" onclick='$("#formAgregarDetalle").attr("action", "AgregarProductoFactura").submit(); '>Agregar</button>
                    <button class="btn btn-warning btn-sm" style="color:black" onclick='$("#formAgregarDetalle").attr("action", "AgregarDetalleFactura").submit();'>Agregar manual</button>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col">
                    @if (Model.ListadoDetalles != null && Model.ListadoDetalles.Any())
                    {
                        <table id="tablaDetalles" class="table table-bordered table-striped table-sm table-responsive-sm table-responsive-md">
                            <thead class="thead-dark text-center">
                                <tr>
                                    <th width="25"></th>
                                    <th>Código</th>
                                    <th>Descripción</th>
                                    <th>Cantidad</th>
                                    <th>V/Unidad</th>
                                    <th>Subtotal</th>
                                    <th>Descuento</th>
                                    <th>Cargo</th>
                                    <th>Valor impuesto</th>
                                    <th>Total</th>
                                    <th width="25"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.ListadoDetalles)
                                {
                                    <tr>
                                        <td class="text-center">
                                            @Html.ActionLink("Button", "EditarDetalleFactura", new { Id = item.Id, Adquiriente = Model.IdAdquiriente, fecha = Model.Fecha, fechaVencimiento = Model.FechaVencimiento }, new { @class = "editar" })
                                        </td>
                                        <td>@item.Codigo</td>
                                        <td>@item.DescripcionDetalles</td>
                                        <td class="text-right">@string.Format("{0:N2}", item.Cantidad)</td>
                                        <td class="text-right">@string.Format("{0:C2}", item.ValorUnidad)</td>
                                        <td class="text-right">@string.Format("{0:C2}", item.SubTotal)</td>
                                        <td class="text-right">@string.Format("{0:C2}", item.Descuento)</td>
                                        <td class="text-right">@string.Format("{0:C2}", item.Cargo)</td>
                                        <td class="text-right">@string.Format("{0:C2}", item.ValorImpuesto)</td>
                                        <td class="text-right">@string.Format("{0:C2}", item.Total)</td>
                                        <td class="text-center">
                                            @Html.ActionLink("Button", "EliminarDetallefactura", new { Id = item.Id, IdAdquiriente = Model.IdAdquiriente, IdEmisor = Model.IdEmisor, NitBuscar = Model.NitBuscar, TempFecha = Model.Fecha, TempFechaVencimiento = Model.FechaVencimiento }, new { @class = "eliminar" })
                                        </td>
                                    </tr>
                                }
                            </tbody>

                        </table>
                    }
                    else
                    {
                        <h6>No cuenta con detalles</h6>
                    }
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-sm-12 col-md-6 col-lg-3">
                    <label>Subtotal</label>
                    @Html.EditorFor(Model => Model.SubTotalGeneral, new { htmlAttributes = new { @class = "form-control inputClass", Value = string.Format("{0:N2}", Model.SubTotalGeneral), disabled = "disabled" } })
                </div>
                <div class="col-sm-12 col-md-6 col-lg-3">
                    <label>Impuesto</label>
                    @Html.EditorFor(Model => Model.Impuesto, new { htmlAttributes = new { @class = "form-control inputClass", Value = string.Format("{0:N2}", Model.Impuesto), disabled = "disabled" } })
                </div>
                <div class="col-sm-12 col-md-6 col-lg-3">
                    <label>Cargo:</label>
                    @Html.TextBoxFor(Model => Model.Cargo, new { @class = "form-control", Value = string.Format("{0:N2}", Model.Cargo), onchange = "CalcularTotalPrincipal();", id = "Cargoedit", Name = "Cargoedit" })
                </div>
                <div class="col-sm-12 col-md-6 col-lg-3">
                    <label>Descuento:</label>
                    @Html.TextBoxFor(Model => Model.Descuento, new { @class = "form-control", Value = string.Format("{0:N2}", Model.Descuento), onchange = "CalcularTotalPrincipal();", id = "Descuentoedit", Name = "Descuentoedit" })
                </div>
                <div class="col-sm-12 col-md-6 col-lg-9">
                </div>
                <div class="col-sm-12 col-md-6 col-lg-3">
                    <label>Total:</label>
                    @Html.EditorFor(Model => Model.TotalGeneral, new { htmlAttributes = new { @class = "form-control inputClass", Value = string.Format("{0:N2}", Model.TotalGeneral), disabled = "disabled" } })
                </div>
            </div>
            <hr />
            <div class="form-group col-12">
                <button class="btn btn-light" onclick="AgregarRetencion()">Agregar Retención</button>
            </div>
            <div id="divretencion" style="display: none;">
                <form id="formRetencion">
                    <div class="form-row">
                        <div class="col-4">
                            <label>Retención:</label>
                            @Html.DropDownListFor(Model => Model.IdRetencion, Model.ListaRetenciones, new { @class = "form-control", onchange = "CargarDescripcionRetencion()" })
                        </div>
                        <div class="col-4">
                            <div id="divtiporetencion">
                                <label>Descripción:</label><br />
                                @Html.DropDownList("IdTipoRetencion", null, htmlAttributes: new { @class = "form-control", onchange = "CargarPorcentajeRetencion(this.value);", style = " border: 1px #c83822 solid;" })
                            </div>
                        </div>
                        <div class="col-2">
                            <label>Porcentaje:</label>
                            <br />
                            <b>
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                <label id="Porcentaje" style="border: 1px #c83822 solid; font-size: 30px">@Model.PorcentajeRetencion</label>
                            </b>
                            @Html.HiddenFor(Model => Model.PorcentajeRetencion, new { @Value = Model.PorcentajeRetencion })
                            @Html.HiddenFor(Model => Model.SubTotalGeneral)
                            @*<input type="text" id="Porcentaje" class="form-control" />*@
                        </div>

                        <div class="col-1">
                            <button style="background-color:transparent" type="button" class="btn  bg-transparent" onclick="CalcularTotalRetenciones()">
                                <img src="~/Content/Images/anadir.png" />
                            </button>
                        </div>
                        <div class="col-1">
                        </div>
                    </div>
                </form>
                <div class="col-6">
                    <table id="idTablaRetencion" class="table table-bordered table-striped table-sm table-responsive-sm table-responsive-md">
                        <thead class="thead-dark text-center">
                            <tr>
                                <th class="text-center">Retención</th>
                                <th class="text-center">Porcentaje</th>
                                <th class="text-center">Valor</th>
                                <th class="text-center">Descripción</th>
                                <th class=" text-sm-right"></th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
                <div class="row">
                    <div class="col-3">
                        <label>Total retenciones:</label>
                        @Html.EditorFor(Model => Model.TotalRetencion, new { htmlAttributes = new { @class = "form-control inputClass", Value = string.Format("{0:N2}", Model.TotalRetencion), disabled = "disabled" } })

                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-9">
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-9">
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-3">
                        <label>Total Con Retenciones:</label>
                        @Html.EditorFor(Model => Model.TotalFinalRetencion, new { htmlAttributes = new { @class = "form-control inputClass", Value = string.Format("{0:N2}", Model.TotalFinalRetencion), disabled = "disabled" } })
                    </div>
                </div>
            </div>
            <div class="col-12">
                <label>Observaciones:</label>
                @Html.TextArea("Observacion", Model.Observacion, new { @class = "form-control", onchange = "AgregarObservacion(this.value);" })
            </div>
        </div>
    </div>
    <br />

    <div class="row">

        <div class="col">

            @using (Html.BeginForm("ValidarJson", "FacturacionManual", FormMethod.Post, new { target = "_blank", hidden = "hidden" }))
            {
                @Html.HiddenFor(Model => Model.RazonSocial)
                @Html.HiddenFor(Model => Model.Prefijo)
                @Html.HiddenFor(Model => Model.Fecha)
                @Html.HiddenFor(Model => Model.Observacion)
                @Html.HiddenFor(Model => Model.Identificacion)
                @Html.HiddenFor(Model => Model.Correo)
                @Html.HiddenFor(Model => Model.Telefono)
                @Html.HiddenFor(Model => Model.Direccion)
                @Html.HiddenFor(Model => Model.Moneda, null)
                @Html.HiddenFor(Model => Model.FormaPago, null)
                @Html.HiddenFor(Model => Model.MedioPago, null)

                <button class="btn btn-warning btn-sm" type="submit">Validar Json</button>
            }

            @using (Ajax.BeginForm("EnviarDatosFactura", null, new AjaxOptions() { InsertionMode = InsertionMode.Replace, OnSuccess = "onSuccess(data,this)", LoadingElementId = "loading" }, new { autocomplete = "off", id = "formEnviar" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(Model => Model.RazonSocial)
                @Html.HiddenFor(Model => Model.Prefijo)
                @Html.HiddenFor(Model => Model.Fecha)
                @Html.HiddenFor(Model => Model.Observacion)
                @Html.HiddenFor(Model => Model.Identificacion)
                @Html.HiddenFor(Model => Model.Correo)
                @Html.HiddenFor(Model => Model.Telefono)
                @Html.HiddenFor(Model => Model.Direccion)
                @Html.HiddenFor(Model => Model.Moneda, null)
                @Html.HiddenFor(Model => Model.FormaPago, null)
                @Html.HiddenFor(Model => Model.MedioPago, null)
                @Html.HiddenFor(Model => Model.TotalGeneral)
                @Html.HiddenFor(Model => Model.SubTotalGeneral)
                @Html.HiddenFor(Model => Model.Cargo)
                @Html.HiddenFor(Model => Model.Descuento)
                @Html.HiddenFor(Model => Model.Descuento)
                @Html.HiddenFor(Model => Model.Cargo)

                <button id="btnEnviar" class="btn btn-success btn-sm " type="submit">DIAN</button>
                <button class="btn btn-warning btn-sm" style="color:black;" onclick='$("#formEnviar").attr("action", "EditarGuardarTemporal").submit(); return false'>GUARDAR FACSE</button>
                @Html.ActionLink("CANCELAR", "Buscar", null, new { @class = "btn btn-danger btn-sm" })
            }


        </div>

    </div>
    <br />
    <div class="row">
        <div class="col">
            <div id="divMensaje"></div>
        </div>
    </div>


    <br />

</div>

<div id="loading" class="updateProgress" style="display:none;">
    <img src="~/Content/Images/procesando.gif" />
</div>


<style>


    .oculto {
        display: none;
    }

    a.editar {
        background: url("../../Content/Images/edit.png") no-repeat top left;
        display: block;
        text-indent: -9999px;
    }

    a.eliminar {
        background: url("../../Content/Images/basura.png") no-repeat top left;
        display: block;
        text-indent: -9999px;
    }

    a.NuevoImpuesto {
        margin-top: 40px;
        background: url("../../Content/Images/plus.png") no-repeat top left;
        display: block;
        text-indent: -9999px;
    }


    .updateProgress {
        position: fixed;
        z-index: 2000;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: #fff;
        opacity: 0.5;
        filter: alpha(opacity=70);
        text-align: center;
    }
</style>


<script type="text/javascript">

    $(document).ready(function () {
        var moneda = $("#Moneda option:selected").val();

        if (moneda.toUpperCase() == '21EBA47A-3970-4519-8226-C607413412AB') {
            $("#idDivTrm").show();
        }
        else {
            $("#idDivTrm").hide();
        }

        validarSessionRetenciones();
        var id = $("#NitBuscar").val();

        if (id != "") {
            CargarDatosAdquiriente(id);
            $("#ListaAdquiriente").val(id);
        }

    });
    $(".btnGo").click(function () {
        var form = $("#formEnviar");
        // event.preventDefault(); doesn't work in IE8 so do the following instead
        (event.preventDefault) ? event.preventDefault() : event.returnValue = false;
        form.submit();
    });


    function showPageLoadingSpinner() {
        $('#ajaxLoaderDiv').show();
        $('#ajaxLoaderDiv').append(
            '<img src="@Url.Content("~/Content/Images/configuracion.png")" alt="Loading..."class="ajax-loader" />'
        );
    }



    function hidePageLoadingSpinner() {
        setTimeout(function () {
            $('.ajax-loader').remove();
            $('#ajaxLoaderDiv').hide();
        }, 20000);
    }

    function CargarDatosAdquiriente(nit) {
        try {
            if (nit != "") {
                    $.ajax({
                        type: "GET",
                        url: "/FacturacionManual/CargarDatosAdquiriente",
                        data: { nit: nit },
                        success: (data) => {
                            if (data != null) {

                                $(data).each((index, item) => {
                                    $("#RazonSocial").val(item.razonSocial);
                                    $("#Identificacion").val(item.identificacion);
                                    $("#Direccion").val(item.direccion);
                                    $("#Telefono").val(item.telefono);
                                    $("#Correo").val(item.correo);
                                    $("#IdAdquiriente").val(item.id);
                                    $("#Digito").val(item.digito);
                                    $("#Pais").val(item.pais);
                                    $("#Departamento").val(item.departamento);
                                    $("#Ciudad").val(item.ciudad);

                                });

                                $("#TempFecha").val($("#Fecha").val());
                                $("#TempFechaVencimiento").val($("#FechaVencimiento").val());

                            }
                        },
                        error: (error) => {
                            console.error(error);
                        }
                    });
            }
        } catch (e) {
            console.log(e);
        }
    }

    //function CargarPrefijo(emisor, fecha) {
    //    try {

    //        if (emisor.toString() != "00000000-0000-0000-0000-000000000000") {

    //                $.ajax({
    //                    type: "GET",
    //                    url: "/FacturacionManual/CargarPrefijo",
    //                    data: { emisor: emisor, fecha: fecha },
    //                    success: (data) => {
    //                        $("#Prefijo").val(data);
    //                    }
    //                });
    //        }
    //    } catch (e) {

    //    }
    //}

    function CambioFechaVencimiento(fecha) {
        try {
                    $.ajax({
                    type: "GET",
                    url: "/FacturacionManual/CambioFechaVencimiento",
                    data: { fecha: fecha },
                    success: (data) => {
                        $("#Prefijo").val(data);
                    }
                });
        } catch (e) {

        }
    }


    function GuardarCatalogoFactura(id, valor) {
        try {
            console.log(valor);
                $.ajax({
                    type: "POST",
                    url: "/FacturacionManual/ActualizarCatalogoFactura",
                    data: { idCatalogo: id, valor: valor },
                    success: (data) => {
                        if (data != null) {
                            console.log(data);
                        }
                    },
                    error: (error) => {
                        console.error(error);
                    }
                });
        } catch (e) {
            console.log(e);
        }
    }
    //$(document).ready(function () {
    //    $('.select').select2();
    //});

    @*function GuardarRetencionGeneral() {
        try {

            var subtotal = $("#Subtotal").val();
            var id = $("#IdRetencion").val();
            var texto = $("#IdRetencion option:selected").text();
            $("#idTablaRetencion tbody").empty();
                 $.ajax({
                    type: "POST",
                    url: '@Url.Action("GuardarRetencionGeneral", "FacturacionManual")',
                    data: { idImRe: id, texto: texto, subtotal: subtotal },
                    success: (data) => {
                        if (data != null) {
                            console.log(data);
                            var htmlTag = '';
                            $(data).each((index, item) => {
                                htmlTag = htmlTag + '<tr>' + '<td>' + item.Descripcion + '</td>' + '<td class="valor">' + item.Valor + '</td>' + '<td>'
                                    + '<a style="cursor: pointer;" onclick="ElimiarRetencionGeneral(' + item.Id + '  )"><img src="../../Content/Images/basura.png"/></a>' + '</td>' + '</tr>'
                            });
                            //console.log(htmlTag);
                            $("#idTablaRetencion tbody").append(htmlTag);
                            CalcularTotal();
                        }
                    },
                    error: (error) => {
                        console.error(error);
                    }
                });
        } catch (e) {
            console.log(e);
        }
    }*@

    function EnviarDatosFactura() {
        try {
                $.ajax({
                    type: "GET",
                    url: "/FacturacionManual/EnviarDatosFactura",
                    success: (data) => {
                        console.log(data);
                    },
                    error: (error) => {
                        console.error(error);
                    }
                });
        } catch (e) {
            console.log(e);
        }
    }

       function CambiarMedioPago(id) {
        try {
                $.ajax({
                    type: "GET",
                    url: "/FacturacionManual/CambiarMedioPago",
                    data: { id },
                    success: (data) => {

                    }
                });
        } catch (e) {
            console.log(e);
        }
    }

    function CambiarMoneda(id) {
        try {
            if (id.toUpperCase() == '21EBA47A-3970-4519-8226-C607413412AB') {
                $("#idDivTrm").show();
            }
            else {
                $("#idDivTrm").hide();
            }

                $.ajax({
                    type: "GET",
                    url: "/FacturacionManual/CambiarModeda",
                    data: { id },
                    success: (data) => {

                    }
                });
        } catch (e) {
            console.log(e);
        }
    }

    function CambiarTrm(valor) {
        try {
                $.ajax({
                    type: "GET",
                    url: "/FacturacionManual/CambiarTrm",
                    data: { valor },
                    success: (data) => {

                    }
                });
        } catch (e) {
            console.log(e);
        }
    }

    function CambiarFechaTrm(fecha) {
        try {
                $.ajax({
                    type: "GET",
                    url: "/FacturacionManual/CambiarFechaTrm",
                    data: { fecha },
                    success: (data) => {

                    }
                });
        } catch (e) {
            console.log(e);
        }
    }

    function CambiarFormaPago(id) {
        try {
                $.ajax({
                    type: "GET",
                    url: "/FacturacionManual/CambiarFormaPago",
                    data: { id },
                    success: (data) => {

                    }
                });
        } catch (e) {
            console.log(e);
        }
    }

    function AgregarObservacion(observacion) {
        try {
                $.ajax({
                    type: "GET",
                    url: "/FacturacionManual/AgregarObservacion",
                    data: { observacion },
                    success: (data) => {

                    }
                });
        } catch (e) {
            console.log(e);
        }
    }

    function AgregarODR(valor, tipo) {
        try {
                $.ajax({
                    type: "GET",
                    url: "/FacturacionManual/AgregarODR",
                    data: { valor, tipo },
                    success: (data) => {

                    }
                });
        } catch (e) {
            console.log(e);
        }
    }

    function onSuccess(result, ref) {
        showPageLoadingSpinner();
        try {
            if (result.isValid) {
                $("#divMensaje").html(result.data);
            } else {

                if (result.data == "OK") {
                    location.href = "/FacturacionManual/Buscar";
                } else {
                    console.log(result.data);
                    $("#divMensaje").html("Ha ocurrido un error");
                }
            }
        } catch (e) {
            console.log(result.data);
        }
    }
    function CargarCargo(cargo)
        {
        $("#Cargo").val(cargo);
        var subtotal = $("#SubTotalGeneral").val();
        var total = $("#TotalGeneral").val();

        var sumasubtotal = parseFloat(subtotal) + parseFloat(cargo);
        var sumatotal = parseFloat(total) + parseFloat(cargo);

        $("#Subtotal").val(sumasubtotal);
        $("#Total").val(sumatotal);
    }

    function CargarDescuento(descuento) {
        $("#Descuento").val(descuento);
        var subtotal = $("#SubTotalGeneral").val();
        var total = $("#TotalGeneral").val();

        var restasubtotal = parseFloat(subtotal) - parseFloat(descuento);
        var restatotal = parseFloat(total) - parseFloat(descuento);

        $("#Subtotal").val(restasubtotal);
        $("#Total").val(restatotal);
    }
    $('select').chosen();

    function CalcularTotalPrincipal() {
        try {
            var subTotal = $("#SubTotalGeneral").val().replace(/,/g, "");
            var impuesto = $("#Impuesto").val().replace(/,/g, "");
            var cargo = $("#Cargoedit").val().replace(/,/g, "");
            var descuento = $("#Descuentoedit").val().replace(/,/g, "");
            var retencion = $("#TotalRetencion").val().replace(/,/g, "");


            //if (parseFloat(cargo) == 'isNaN') {
            //    cargo = 0;
            //}
            if ((isNaN(parseFloat(cargo)))) {
                cargo = 0;
            }
            if ((isNaN(parseFloat(descuento)))) {
                descuento = 0;
            }

            $("#Cargo").val(cargo);
            $("#Descuento").val(descuento);

            var total = (parseFloat(subTotal) + parseFloat(impuesto) + parseFloat(cargo) - parseFloat(descuento));
            $("#TotalGeneral").val(Intl.NumberFormat('en').format(total));
            $("#Cargoedit").val(Intl.NumberFormat('en').format(cargo));
            $("#Descuentoedit").val(Intl.NumberFormat('en').format(descuento));
            $("#TotalFinalRetencion").val(Intl.NumberFormat('en').format(total - parseFloat(retencion)));

            if (total > 0) {
                $("#btnEnviar").prop('disabled', false);
            }
            else {
                $("#btnEnviar").prop('disabled', true);
            }

        } catch (e) {
            console.log(e);
        }
    }

    function CargarDescripcionRetencion() {
        var idRetencion = $("#IdRetencion").val();
        if (idRetencion.length > 0) {
            var ddl = $("#IdTipoRetencion");
            ddl.empty('');
            $.ajax({
                type: "POST",
                url: '@Url.Action("ListadoTipoRetencion", "FacturacionManual")',
                data: { IdRetencion: idRetencion },
                async: false,
                dataType: "text",
                success: function (result) {
                    var existe = JSON.parse(result);

                    if (existe.listado.length==0) {
                        $("#divtiporetencion").attr('style', 'display:none;');
                    }
                    else {
                        $("#divtiporetencion").attr('style', 'display:block;');
                        $(existe.listado).each(function () {
                            ddl.append($("<option>").val(this.Value).text(this.Text));
                        });
                    }
                    document.getElementById("Porcentaje").innerHTML = existe.porcentaje;
                    document.getElementById("PorcentajeRetencion").value = existe.porcentaje;
                },
                error: function (result) {
                    console.error(error)
                }
            });
        }
    }

    function CargarPorcentajeRetencion(Porcentaje) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("CargarPorcentaje", "FacturacionManual")',
                data: { gTipoRetencion: Porcentaje },
                async: false,
                dataType: "text",
                success: function (result) {
                    document.getElementById("Porcentaje").innerHTML = result;
                    document.getElementById("PorcentajeRetencion").value = result;
            },
                error: function (result) {
                console.error(error)
            }
        });
    }

    function CalcularTotalRetenciones() {
        try {
            $("#idTablaRetencion tbody").empty();
                $.ajax({
                    url: '@Url.Action("GuardarRetencionGeneral", "FacturacionManual")',
                    type: 'POST',
                    data: $("#formRetencion").serialize(),
                    success: (data) => {
                        if (data != null) {
                            console.log(data);
                            var htmlTag = '';
                            $(data.data).each((index, item) => {
                                htmlTag = htmlTag + '<tr>' + '<td>' + item.Descripcion + '</td><td class="text-right">' + item.PorcentajeRetencion + '</td>' + '<td class="text-right">' + Intl.NumberFormat('en').format(item.Valor) + '</td>' + '<td>' + item.DescripcionRetencion + '</td>  <td>'
                                    + '<a style="cursor: pointer;" onclick="EliminarRetencionGeneral(\'' + item.Id + '\')"><img src="../../Content/Images/basura.png"/></a>' + '</td>' + '</tr>'
                            });
                            //console.log(htmlTag);
                            $("#idTablaRetencion tbody").append(htmlTag);
                            $("#TotalRetencion").val(Intl.NumberFormat('en').format(data.total));
                            var total = $("#TotalGeneral").val().replace(/,/g, "");
                            $("#TotalFinalRetencion").val(Intl.NumberFormat('en').format(parseFloat(total)-data.total));
                            }
                    },
                    error: (error) => {
                        console.error(error);
                    }
            });

        } catch (e) {
            console.log(e);
        }
    }

     function EliminarRetencionGeneral(id) {
        try {
            debugger;
            $("#idTablaRetencion tbody").empty();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("EliminarRetencionGeneral", "FacturacionManual")',
                    data: { id: id },
                    success: (data) => {
                        var htmlTag = '';
                        $(data.data).each((index, item) => {

                            htmlTag = htmlTag + '<tr>' + '<td>' + item.Descripcion + '</td><td>' + item.PorcentajeRetencion + '</td>' + '<td class="valor">' + Intl.NumberFormat('en').format(item.Valor) + '</td>' + '<td>' + item.DescripcionRetencion + '</td>  <td>'
                                + '<a style="cursor: pointer;" onclick="EliminarRetencionGeneral(\'' + item.Id + '\')"><img src="../../Content/Images/basura.png"/></a>' + '</td>' + '</tr>'
                        });
                        //console.log(htmlTag);
                        $("#idTablaRetencion tbody").append(htmlTag);
                        $("#TotalRetencion").val(Intl.NumberFormat('en').format(data.total));
                        var total = $("#TotalGeneral").val().replace(/,/g, "");
                        $("#TotalFinalRetencion").val(Intl.NumberFormat('en').format(parseFloat(total) - data.total));
                    },
                    error: (error) => {
                        alert("ohhh");
                        console.error(error);
                    }
                });
        } catch (e) {
            console.log(e);
        }
    }

     function validarSessionRetenciones() {
        try {
            $("#idTablaRetencion tbody").empty();
            $.ajax({
                type: "POST",
                url: '@Url.Action("ValidarRetenciones", "FacturacionManual")',
                data: {},
                success: (data) => {
                    var htmlTag = '';
                    $(data.data).each((index, item) => {
                        htmlTag = htmlTag + '<tr>' + '<td>' + item.Descripcion + '</td><td class="text-right">' + item.PorcentajeRetencion + '</td>' + '<td class="text-right">' + Intl.NumberFormat('en').format(item.Valor) + '</td>' + '<td>' + item.DescripcionRetencion + '</td>  <td>'
                            + '<a style="cursor: pointer;" onclick="EliminarRetencionGeneral(\'' + item.Id + '\')"><img src="../../Content/Images/basura.png"/></a>' + '</td>' + '</tr>'
                    });
                    //console.log(htmlTag);
                    $("#idTablaRetencion tbody").append(htmlTag);
                    $("#TotalRetencion").val(Intl.NumberFormat('en').format(data.total));
                    var total = $("#TotalGeneral").val().replace(/,/g, "");
                    $("#TotalFinalRetencion").val(Intl.NumberFormat('en').format(parseFloat(total) - data.total));
                }
            });
        } catch (e) {
            console.log(e);
        }
    }

    function AgregarRetencion() {
        document.getElementById("divretencion").style.display = "block";
    }

</script>
